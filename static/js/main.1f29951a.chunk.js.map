{"version":3,"sources":["components/AddForm/AddForm.module.css","components/TaskFilter/TaskFilter.module.css","App.module.css","components/DateFilter/DateFilter.module.css","components/AddForm/AddForm.js","components/TodoList/TodoList.js","components/TaskFilter/TaskFilter.js","components/DateFilter/DateFilter.js","components/SortForm/SortForm.js","App.js","components/helpers/helpers.js","index.js","components/TodoList/TodoLis.module.css","components/SortForm/SortForm.module.css"],"names":["module","exports","AddForm","state","text","date","showValidationError","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","trim","length","task","showDate","split","reverse","join","completed","id","shortid","generate","props","onAddTask","this","inputSwitch","styles","inputError","inputSuccess","btnSwitch","btnError","textInput","cx","input","addBtn","btn","className","mainWrapper","title","onSubmit","form","type","onChange","placeholder","dateContainer","span","dateInput","spanError","Component","TodoList","tasks","onUpateCompleted","onDeleteTask","firstLine","listItem","list","map","notcompleted","textDecor","classNames","key","checked","onClick","TaskFilter","filter","onChangeFilter","DateFilter","Date","React","SortForm","sortDirectionNameAsc","sortDirectionDateAsc","sort","onSort","sortDirectionChange","prevState","sortName","sortDate","viewName","viewDate","btnContainer","App","filterDate","filterName","sortBy","addTask","deleteTask","updateCompleted","changeFilter","sorted","persistedTasks","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","sortedTasks","initialTasks","slice","a","b","nameA","toLowerCase","nameB","dateA","dateB","sortedArray","includes","filteredByName","newDateFromTask","newDateFromFilter","getDate","getMonth","getFullYear","filteredByDate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f29951a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"AddForm_mainWrapper__C4MOv\",\"title\":\"AddForm_title__3DtLi\",\"form\":\"AddForm_form__1ABhS\",\"input\":\"AddForm_input__2cE6q\",\"inputSuccess\":\"AddForm_inputSuccess__3Jdzi\",\"inputError\":\"AddForm_inputError__HHsxy\",\"btn\":\"AddForm_btn__3fg21\",\"btnError\":\"AddForm_btnError__3sEC7\",\"span\":\"AddForm_span__1aKW_\",\"spanError\":\"AddForm_spanError__1YXF_\",\"dateContainer\":\"AddForm_dateContainer__1ivuG\",\"dateInput\":\"AddForm_dateInput__1ueOf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"TaskFilter_mainWrapper__3-5Ez\",\"title\":\"TaskFilter_title__1RXzr\",\"input\":\"TaskFilter_input__1JeF6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"App_mainWrapper__1lJxM\",\"title\":\"App_title__1PEAD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"DateFilter_mainWrapper__QYv14\",\"title\":\"DateFilter_title__1L5Bj\",\"input\":\"DateFilter_input__3mJoZ\"};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./AddForm.module.css\";\nimport cx from \"classnames\";\nimport shortid from \"shortid\";\n\nexport default class AddForm extends Component {\n  static propTypes = {\n    onAddTask: PropTypes.func.isRequired,\n  };\n\n  state = {\n    text: \"\",\n    date: \"\",\n    showValidationError: \"\",\n  };\n\n  // Данный хендл обрабатывает и дата пикер, и инпут текста\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { text, date } = this.state;\n\n    if (date === \"\") {\n      this.setState({\n        showValidationError: \"Please, set date\",\n      });\n      return;\n    }\n\n    if (text.trim().length === 0) {\n      this.setState({\n        showValidationError: \"Please, enter task\",\n      });\n      return;\n    }\n\n    const task = {\n      text,\n      showDate: date.split(\"-\").reverse().join(\"-\"),\n      date,\n      completed: false,\n      id: shortid.generate(),\n    };\n\n    this.props.onAddTask(task);\n\n    this.setState({\n      text: \"\",\n      showValidationError: \"\",\n      date: \"\",\n    });\n  };\n\n  render() {\n    const { text, showValidationError, date } = this.state;\n    const inputSwitch = showValidationError\n      ? styles.inputError\n      : styles.inputSuccess;\n    const btnSwitch = showValidationError && styles.btnError;\n\n    const textInput = cx(styles.input, inputSwitch);\n    const addBtn = cx(styles.btn, btnSwitch);\n\n    return (\n      <div className={styles.mainWrapper}>\n        <h2 className={styles.title}>Add task</h2>\n        <form onSubmit={this.handleSubmit} className={styles.form}>\n          <input\n            type=\"text\"\n            name=\"text\"\n            value={text}\n            onChange={this.handleChange}\n            placeholder=\"Write task\"\n            className={textInput}\n          />\n          <button type=\"submit\" className={addBtn}>\n            Add Todo\n          </button>\n        </form>\n        <div className={styles.dateContainer}>\n          <span className={styles.span}>Set date</span>\n          <input\n            type=\"date\"\n            name=\"date\"\n            value={date}\n            onChange={this.handleChange}\n            styles={styles.dateInput}\n          />\n        </div>\n        {showValidationError && (\n          <span className={styles.spanError}>{showValidationError}</span>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./TodoLis.module.css\";\nimport cx from \"classnames\";\nimport classNames from \"classnames\";\n\nconst TodoList = ({ tasks, onUpateCompleted, onDeleteTask }) => {\n  const firstLine = cx(styles.listItem, styles.firstLine);\n  return (\n    <div className={styles.mainWrapper}>\n      <h2 className={styles.title}>Hello from TodoList</h2>\n      <ul className={styles.list}>\n        <li className={firstLine}>\n          <div>\n            <p>Task Name</p>\n          </div>\n          <div>\n            <p>Task Date</p>\n          </div>\n          <div>\n            <p>Task Status</p>\n          </div>\n          <div>\n            <p>Delete Task</p>\n          </div>\n        </li>\n        {tasks &&\n          tasks.map((task) => {\n            const { completed, notcompleted } = styles;\n            const textDecor = classNames(\n              task.completed ? completed : notcompleted\n            );\n            return (\n              <li key={task.id} className={styles.listItem}>\n                <div>\n                  <p className={textDecor}>{task.text}</p>\n                </div>\n                <div>\n                  <p>{task.showDate}</p>\n                </div>\n                <div>\n                  <label>\n                    Completed:\n                    <input\n                      type=\"checkbox\"\n                      checked={task.completed}\n                      onChange={() => onUpateCompleted(task.id)}\n                    />\n                  </label>\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={styles.btn}\n                    onClick={() => onDeleteTask(task.id)}\n                  >\n                    Delete\n                  </button>\n                </div>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  onDeleteTask: PropTypes.func.isRequired,\n  onUpateCompleted: PropTypes.func.isRequired,\n  tasks: PropTypes.array.isRequired,\n};\n\nexport default TodoList;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./TaskFilter.module.css\";\n\nexport default class TaskFilter extends Component {\n  static propTypes = {\n    onChangeFilter: PropTypes.func.isRequired,\n  };\n\n  state = {\n    filter: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      filter: e.target.value,\n    });\n    this.props.onChangeFilter(e.target.value);\n  };\n  render() {\n    const { filter } = this.state;\n    return (\n      <div className={styles.mainWrapper}>\n        <span className={styles.title}>Filter Task By Name</span>\n        <input\n          type=\"text\"\n          value={filter}\n          onChange={this.handleChange}\n          placeholder=\"Type to filter tasks...\"\n          className={styles.input}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./DateFilter.module.css\";\n\nexport default class DateFilter extends React.Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n  };\n\n  state = {\n    date: \"\",\n  };\n\n  handleChange = (e) => {\n    const date = e.target.value;\n    const { onChange } = this.props;\n    onChange(new Date(date));\n    this.setState({\n      date,\n    });\n  };\n\n  render() {\n    const { date } = this.state;\n    return (\n      <div className={styles.mainWrapper}>\n        <span className={styles.title}>Filter by Date</span>\n        <div>\n          <input\n            type=\"date\"\n            name=\"date\"\n            value={date}\n            onChange={this.handleChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./SortForm.module.css\";\n\nexport default class SortForm extends Component {\n  static propTypes = {\n    onSort: PropTypes.func.isRequired,\n  };\n\n  state = {\n    sortDirectionNameAsc: true,\n    sortDirectionDateAsc: true,\n  };\n\n  sort = (e) => {\n    let sort = e.target.name;\n    const { onSort } = this.props;\n\n    onSort(sort);\n  };\n\n  sortDirectionChange = (e) => {\n    const sort = e.target.name;\n    if (sort === \"nameAsc\" || sort === \"nameDsc\") {\n      this.setState((prevState) => ({\n        sortDirectionNameAsc: !prevState.sortDirectionNameAsc,\n      }));\n    }\n\n    if (sort === \"dateAsc\" || sort === \"dateDsc\") {\n      this.setState((prevState) => ({\n        sortDirectionDateAsc: !prevState.sortDirectionDateAsc,\n      }));\n    }\n  };\n\n  render() {\n    const { sortDirectionNameAsc, sortDirectionDateAsc } = this.state;\n\n    const sortName = sortDirectionNameAsc ? \"nameAsc\" : \"nameDsc\";\n    const sortDate = sortDirectionDateAsc ? \"dateAsc\" : \"dateDsc\";\n    const viewName = sortDirectionNameAsc ? \"A-Z\" : \"Z-A\";\n    const viewDate = sortDirectionDateAsc ? \"New-Old\" : \"Old-New\";\n\n    return (\n      <div onClick={this.sortDirectionChange} className={styles.mainWrapper}>\n        <span className={styles.title}>Sort Task</span>\n        <div className={styles.btnContainer}>\n          <button\n            type=\"button\"\n            name={sortName}\n            onClick={this.sort}\n            className={styles.btn}\n          >\n            {viewName}\n          </button>\n          <button\n            type=\"button\"\n            name={sortDate}\n            onClick={this.sort}\n            className={styles.btn}\n          >\n            {viewDate}\n          </button>\n          <button\n            type=\"button\"\n            name=\"sortClear\"\n            onClick={this.sort}\n            className={styles.btn}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import styles from \"./App.module.css\";\nimport React, { Component } from \"react\";\nimport AddForm from \"./components/AddForm/AddForm\";\nimport TodoList from \"./components/TodoList/TodoList\";\nimport TaskFilter from \"./components/TaskFilter/TaskFilter\";\nimport DateFilter from \"./components/DateFilter/DateFilter\";\nimport SortForm from \"./components/SortForm/SortForm\";\nimport {\n  filteredByDate,\n  filteredByName,\n  sortedArray,\n} from \"./components/helpers/helpers\";\n\nexport default class App extends Component {\n  state = {\n    tasks: [],\n    filterDate: \"\",\n    filterName: \"\",\n    sortBy: \"\",\n  };\n\n  componentDidMount() {\n    const persistedTasks = localStorage.getItem(\"tasks\");\n\n    if (persistedTasks) {\n      const tasks = JSON.parse(persistedTasks);\n\n      this.setState({ tasks });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { tasks } = this.state;\n    if (prevState.tasks !== tasks) {\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n  }\n\n  // Добавление таски\n  addTask = (task) => {\n    // Новая таска\n    this.setState((prevState) => ({\n      tasks: [...prevState.tasks, task],\n    }));\n  };\n\n  // Удаление таски\n  deleteTask = (id) => {\n    this.setState((prevState) => ({\n      tasks: prevState.tasks.filter((task) => task.id !== id),\n    }));\n  };\n\n  // Изменение в зависимости выполнена или нет таска.\n\n  updateCompleted = (id) => {\n    this.setState((prevState) => ({\n      tasks: prevState.tasks.map((task) =>\n        task.id === id ? { ...task, completed: !task.completed } : task\n      ),\n    }));\n  };\n\n  // Фильтрация (для фильтрации по дате использовал react-datepicker)\n\n  changeFilter = (filter) => {\n    if (typeof filter === \"object\") {\n      this.setState({\n        filterDate: new Date(filter),\n      });\n    }\n\n    if (typeof filter === \"string\") {\n      this.setState({\n        filterName: filter,\n      });\n    }\n  };\n\n  // Сортировка\n\n  sort = (sorted) => {\n    return this.setState({ sortBy: sorted });\n  };\n\n  render() {\n    const { tasks, filterDate, filterName, sortBy } = this.state;\n    const filteredByDateTasks = filteredByDate(tasks, filterDate);\n    const filteredByNameTasks = filteredByName(filteredByDateTasks, filterName);\n    const sortedTasks = sortedArray(filteredByNameTasks, sortBy);\n\n    return (\n      <div className={styles.mainWrapper}>\n        <h1 className={styles.title}>Todo App</h1>\n        <AddForm onAddTask={this.addTask} />\n        <SortForm onSort={this.sort} />\n        <TaskFilter onChangeFilter={this.changeFilter} />\n        <DateFilter onChange={this.changeFilter} />\n        <TodoList\n          tasks={sortedTasks}\n          onDeleteTask={this.deleteTask}\n          onUpateCompleted={this.updateCompleted}\n        />\n      </div>\n    );\n  }\n}\n","export const filteredByDate = (tasks, filterDate) =>\n  tasks.filter((task) => {\n    if (filterDate === \"\") {\n      return task;\n    } else {\n      const newDateFromTask = new Date(task.date);\n      const newDateFromFilter = new Date(filterDate);\n      const checkDateTask = `${newDateFromTask.getDate()}/${\n        newDateFromTask.getMonth() + 1\n      }/${newDateFromTask.getFullYear()}`;\n      const checkDateFilter = `${newDateFromFilter.getDate()}/${\n        newDateFromFilter.getMonth() + 1\n      }/${newDateFromFilter.getFullYear()}`;\n\n      return checkDateTask === checkDateFilter;\n    }\n  });\n\nexport const filteredByName = (tasks, filterName) => {\n  if (filterName === \"\") {\n    return tasks;\n  }\n  return tasks.filter((task) =>\n    task.text.toLowerCase().includes(filterName.toLowerCase())\n  );\n};\n\nexport const sortedArray = (tasks, sort) => {\n  let initialTasks = tasks.slice();\n  switch (sort) {\n    case \"nameAsc\":\n      return initialTasks.slice().sort((a, b) => {\n        const nameA = a.text.toLowerCase();\n        const nameB = b.text.toLowerCase();\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0;\n      });\n    case \"nameDsc\":\n      return initialTasks.slice().sort((a, b) => {\n        const nameA = a.text.toLowerCase();\n        const nameB = b.text.toLowerCase();\n        if (nameA > nameB) return -1;\n        if (nameA < nameB) return 1;\n        return 0;\n      });\n    case \"dateAsc\":\n      return initialTasks.slice().sort((a, b) => {\n        const dateA = a.date;\n        const dateB = b.date;\n        return new Date(dateB) - new Date(dateA);\n      });\n    case \"dateDsc\":\n      return initialTasks.slice().sort((a, b) => {\n        const dateA = a.date;\n        const dateB = b.date;\n        return new Date(dateA) - new Date(dateB);\n      });\n    case \"sortClear\":\n      return initialTasks;\n    default:\n      return tasks;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"TodoLis_mainWrapper__2lNiU\",\"title\":\"TodoLis_title__7MPD0\",\"list\":\"TodoLis_list__2dXT0\",\"listItem\":\"TodoLis_listItem__LXG76\",\"firstLine\":\"TodoLis_firstLine__1qNUF\",\"btn\":\"TodoLis_btn__3OFBr\",\"completed\":\"TodoLis_completed__2eD9B\",\"notCompleted\":\"TodoLis_notCompleted__1XVRf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"SortForm_mainWrapper__31MNo\",\"title\":\"SortForm_title__6jrlR\",\"btnContainer\":\"SortForm_btnContainer__1S4Ls\",\"btn\":\"SortForm_btn__38LyJ\"};"],"sourceRoot":""}