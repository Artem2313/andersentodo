{"version":3,"sources":["components/AddForm/AddForm.js","components/TodoList/TodoList.js","components/TaskFilter/TaskFilter.js","components/DateFilter/DateFilter.js","components/SortForm/SortForm.js","App.js","index.js","components/AddForm/AddForm.module.css","components/TodoList/TodoLis.module.css","components/SortForm/SortForm.module.css","components/TaskFilter/TaskFilter.module.css","components/DateFilter/DateFilter.module.css","App.module.css"],"names":["AddForm","state","text","showValidationError","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","trim","length","onAddTask","props","this","inputSwitch","styles","inputError","inputSuccess","btnSwitch","btnError","className","mainWrapper","title","onSubmit","form","type","onChange","cx","input","btn","spanError","Component","TodoList","tasks","onUpateCompleted","onDeleteTask","list","listItem","firstLine","map","task","key","id","style","textDecoration","completed","date","checked","onClick","TaskFilter","filter","onChangeFilter","placeholder","DateFilter","startDate","Date","dateFormat","selected","React","SortForm","sortDirectionNameAsc","sortDirectionDateAsc","sort","sortingFinish","sortingStart","slice","a","b","nameA","toLowerCase","nameB","dateA","fulldate","dateB","sorting","filtered","onSort","sortDirectionChange","prevState","btnContainer","App","addTask","createdDate","getDate","getMonth","getFullYear","taskToAdd","shortid","generate","deleteTask","updateCompleted","changeFilter","newDateFromTask","newDateFromFilter","includes","sorted","persistedTasks","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.cb96cc00.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./AddForm.module.css\";\nimport cx from \"classnames\";\n\nexport default class AddForm extends Component {\n  static propTypes = {\n    onAddTask: PropTypes.func.isRequired,\n  };\n\n  state = {\n    text: \"\",\n    showValidationError: false,\n  };\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { text } = this.state;\n\n    if (text.trim().length === 0) {\n      this.setState({ showValidationError: true });\n    } else {\n      const { onAddTask } = this.props;\n      onAddTask({ text });\n\n      this.setState({\n        text: \"\",\n        showValidationError: false,\n      });\n    }\n  };\n\n  render() {\n    const { text, showValidationError } = this.state;\n    const inputSwitch = showValidationError\n      ? styles.inputError\n      : styles.inputSuccess;\n    const btnSwitch = showValidationError && styles.btnError;\n\n    return (\n      <div className={styles.mainWrapper}>\n        <h2 className={styles.title}>Add task</h2>\n        <form onSubmit={this.handleSubmit} className={styles.form}>\n          <input\n            type=\"text\"\n            name=\"text\"\n            value={text}\n            onChange={this.handleChange}\n            className={cx(styles.input, inputSwitch)}\n          />\n          <button type=\"submit\" className={cx(styles.btn, btnSwitch)}>\n            Add Todo\n          </button>\n        </form>\n        {showValidationError && (\n          <span className={styles.spanError}>Please, set a task!</span>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./TodoLis.module.css\";\nimport cx from \"classnames\";\n\nconst TodoList = ({ tasks, onUpateCompleted, onDeleteTask }) => (\n  <div className={styles.mainWrapper}>\n    <h2 className={styles.title}>Hello from TodoList</h2>\n    <ul className={styles.list}>\n      <li className={cx(styles.listItem, styles.firstLine)}>\n        <div>\n          <p>Task Name</p>\n        </div>\n        <div>\n          <p>Task Date</p>\n        </div>\n        <div>\n          <p>Task Status</p>\n        </div>\n        <div>\n          <p>Delete Task</p>\n        </div>\n      </li>\n      {tasks &&\n        tasks.map((task) => (\n          <li key={task.id} className={styles.listItem}>\n            <div>\n              <p\n                style={{\n                  textDecoration: task.completed ? \"line-through\" : \"none\",\n                }}\n              >\n                {task.text}\n              </p>\n            </div>\n            <div>\n              <p>{task.date}</p>\n            </div>\n            <div>\n              <label>\n                Completed:\n                <input\n                  type=\"checkbox\"\n                  checked={task.completed}\n                  onChange={() => onUpateCompleted(task.id)}\n                />\n              </label>\n            </div>\n            <div>\n              <button\n                type=\"button\"\n                className={styles.btn}\n                onClick={() => onDeleteTask(task.id)}\n              >\n                Delete\n              </button>\n            </div>\n          </li>\n        ))}\n    </ul>\n  </div>\n);\n\nTodoList.propTypes = {\n  onDeleteTask: PropTypes.func.isRequired,\n  onUpateCompleted: PropTypes.func.isRequired,\n  tasks: PropTypes.array.isRequired,\n};\n\nexport default TodoList;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./TaskFilter.module.css\";\n\nexport default class TaskFilter extends Component {\n  static propTypes = {\n    onChangeFilter: PropTypes.func.isRequired,\n  };\n\n  state = {\n    filter: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      filter: e.target.value,\n    });\n    this.props.onChangeFilter(e.target.value);\n  };\n  render() {\n    const { filter } = this.state;\n    return (\n      <div className={styles.mainWrapper}>\n        <span className={styles.title}>Filter Task By Name</span>\n        <input\n          type=\"text\"\n          value={filter}\n          onChange={this.handleChange}\n          placeholder=\"Type to filter tasks...\"\n          className={styles.input}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./DateFilter.module.css\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// CSS Modules, react-datepicker-cssmodules.css\nimport \"react-datepicker/dist/react-datepicker-cssmodules.css\";\n\nexport default class DateFilter extends React.Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n  };\n\n  state = {\n    startDate: new Date(),\n  };\n\n  handleChange = (date) => {\n    const { onChange } = this.props;\n    onChange(date);\n    this.setState({\n      startDate: date,\n    });\n  };\n\n  render() {\n    return (\n      <div className={styles.mainWrapper}>\n        <span className={styles.title}>Sort by Date</span>\n        <div>\n          <DatePicker\n            dateFormat=\"dd/MM/yyyy\"\n            selected={this.state.startDate}\n            onChange={this.handleChange}\n            className={styles.input}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./SortForm.module.css\";\n\nexport default class SortForm extends Component {\n  static propTypes = {\n    onSort: PropTypes.func.isRequired,\n    tasks: PropTypes.array.isRequired,\n    filtered: PropTypes.array.isRequired,\n  };\n\n  state = { sortDirectionNameAsc: true, sortDirectionDateAsc: true };\n\n  sort = (e) => {\n    let sort = e.target.name;\n    let tasks = this.props.tasks;\n    let sortingStart = [...this.props.filtered];\n    const sorting = (sortingStart, sort) => {\n      switch (sort) {\n        case \"nameAsc\":\n          return sortingStart.slice().sort((a, b) => {\n            const nameA = a.text.toLowerCase();\n            const nameB = b.text.toLowerCase();\n            if (nameA < nameB) return -1;\n            if (nameA > nameB) return 1;\n            return 0;\n          });\n        case \"nameDsc\":\n          return sortingStart.slice().sort((a, b) => {\n            const nameA = a.text.toLowerCase();\n            const nameB = b.text.toLowerCase();\n            if (nameA > nameB) return -1;\n            if (nameA < nameB) return 1;\n            return 0;\n          });\n        case \"dateAsc\":\n          return sortingStart.slice().sort((a, b) => {\n            const dateA = a.fulldate;\n            const dateB = b.fulldate;\n            return new Date(dateB) - new Date(dateA);\n          });\n        case \"dateDsc\":\n          return sortingStart.slice().sort((a, b) => {\n            const dateA = a.fulldate;\n            const dateB = b.fulldate;\n            return new Date(dateA) - new Date(dateB);\n          });\n        case \"sortClear\":\n          return tasks;\n        default:\n          return sortingStart;\n      }\n    };\n\n    const sortingFinish = sorting(sortingStart, sort);\n\n    return this.props.onSort(sortingFinish);\n  };\n\n  sortDirectionChange = (e) => {\n    const sort = e.target.name;\n    if (sort === \"nameAsc\" || sort === \"nameDsc\") {\n      this.setState((prevState) => ({\n        sortDirectionNameAsc: !prevState.sortDirectionNameAsc,\n      }));\n    } else if (sort === \"dateAsc\" || sort === \"dateDsc\") {\n      this.setState((prevState) => ({\n        sortDirectionDateAsc: !prevState.sortDirectionDateAsc,\n      }));\n    }\n  };\n\n  render() {\n    const { sortDirectionNameAsc, sortDirectionDateAsc } = this.state;\n    return (\n      <div onClick={this.sortDirectionChange} className={styles.mainWrapper}>\n        <span className={styles.title}>Sort Task</span>\n        <div className={styles.btnContainer}>\n          <button\n            type=\"button\"\n            name={sortDirectionNameAsc ? \"nameAsc\" : \"nameDsc\"}\n            onClick={this.sort}\n            className={styles.btn}\n          >\n            {sortDirectionNameAsc ? \"A-Z\" : \"Z-A\"}\n          </button>\n          <button\n            type=\"button\"\n            name={sortDirectionDateAsc ? \"dateAsc\" : \"dateDsc\"}\n            onClick={this.sort}\n            className={styles.btn}\n          >\n            {sortDirectionDateAsc ? \"New-Old\" : \"Old-New\"}\n          </button>\n          <button\n            type=\"button\"\n            name=\"sortClear\"\n            onClick={this.sort}\n            className={styles.btn}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import styles from \"./App.module.css\";\nimport shortid from \"shortid\";\nimport React, { Component } from \"react\";\nimport AddForm from \"./components/AddForm/AddForm\";\nimport TodoList from \"./components/TodoList/TodoList\";\nimport TaskFilter from \"./components/TaskFilter/TaskFilter\";\nimport DateFilter from \"./components/DateFilter/DateFilter\";\nimport SortForm from \"./components/SortForm/SortForm\";\n\nexport default class App extends Component {\n  state = {\n    tasks: [],\n    filtered: [],\n  };\n\n  componentDidMount() {\n    const persistedTasks = localStorage.getItem(\"tasks\");\n\n    if (persistedTasks) {\n      const tasks = JSON.parse(persistedTasks);\n\n      this.setState({ tasks, filtered: tasks });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { tasks } = this.state;\n    if (prevState.tasks !== tasks) {\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n      this.setState({ filtered: tasks });\n    }\n  }\n\n  // Добавление таски\n  addTask = (task) => {\n    const date = new Date();\n    const createdDate = `${date.getDate()}/${\n      date.getMonth() + 1\n    }/${date.getFullYear()}`;\n    const taskToAdd = {\n      ...task,\n      id: shortid.generate(),\n      date: createdDate,\n      fulldate: date,\n      completed: false,\n    };\n\n    this.setState((prevState) => ({\n      tasks: [taskToAdd, ...prevState.tasks],\n    }));\n  };\n\n  // Удаление таски\n  deleteTask = (id) => {\n    this.setState((prevState) => ({\n      tasks: prevState.tasks.filter((task) => task.id !== id),\n    }));\n  };\n\n  // Изменение в зависимости выполнена или нет таска\n\n  updateCompleted = (id) => {\n    this.setState((prevState) => ({\n      tasks: prevState.tasks.map((task) =>\n        task.id === id ? { ...task, completed: !task.completed } : task\n      ),\n    }));\n  };\n\n  // Фильтрация (для фильтрации по дате использовал react-datepicker)\n\n  changeFilter = (filter) => {\n    const { tasks } = this.state;\n\n    let filtered;\n\n    if (typeof filter === \"object\") {\n      filtered = tasks.filter((task) => {\n        const newDateFromTask = new Date(task.fulldate);\n        const newDateFromFilter = new Date(filter);\n        const checkDateTask = `${newDateFromTask.getDate()}/${\n          newDateFromTask.getMonth() + 1\n        }/${newDateFromTask.getFullYear()}`;\n        const checkDateFilter = `${newDateFromFilter.getDate()}/${\n          newDateFromFilter.getMonth() + 1\n        }/${newDateFromFilter.getFullYear()}`;\n\n        return checkDateTask === checkDateFilter;\n      });\n    } else if (typeof filter === \"string\") {\n      filtered = tasks.filter((task) =>\n        task.text.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n\n    this.setState({\n      filtered,\n    });\n  };\n\n  // Сортировка\n\n  sort = (sorted) => {\n    return this.setState({ filtered: [...sorted] });\n  };\n\n  render() {\n    const { filtered, tasks } = this.state;\n\n    return (\n      <div className={styles.mainWrapper}>\n        <h1 className={styles.title}>Todo App</h1>\n        <AddForm onAddTask={this.addTask} />\n        <SortForm filtered={filtered} tasks={tasks} onSort={this.sort} />\n        <TaskFilter onChangeFilter={this.changeFilter} />\n        <DateFilter onChange={this.changeFilter} />\n        <TodoList\n          tasks={filtered}\n          onDeleteTask={this.deleteTask}\n          onUpateCompleted={this.updateCompleted}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"AddForm_mainWrapper__C4MOv\",\"title\":\"AddForm_title__3DtLi\",\"form\":\"AddForm_form__1ABhS\",\"input\":\"AddForm_input__2cE6q\",\"inputSuccess\":\"AddForm_inputSuccess__3Jdzi\",\"inputError\":\"AddForm_inputError__HHsxy\",\"btn\":\"AddForm_btn__3fg21\",\"btnError\":\"AddForm_btnError__3sEC7\",\"spanError\":\"AddForm_spanError__1YXF_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"TodoLis_mainWrapper__2lNiU\",\"title\":\"TodoLis_title__7MPD0\",\"list\":\"TodoLis_list__2dXT0\",\"listItem\":\"TodoLis_listItem__LXG76\",\"firstLine\":\"TodoLis_firstLine__1qNUF\",\"btn\":\"TodoLis_btn__3OFBr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"SortForm_mainWrapper__31MNo\",\"title\":\"SortForm_title__6jrlR\",\"btnContainer\":\"SortForm_btnContainer__1S4Ls\",\"btn\":\"SortForm_btn__38LyJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"TaskFilter_mainWrapper__3-5Ez\",\"title\":\"TaskFilter_title__1RXzr\",\"input\":\"TaskFilter_input__1JeF6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"DateFilter_mainWrapper__QYv14\",\"title\":\"DateFilter_title__1L5Bj\",\"input\":\"DateFilter_input__3mJoZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"App_mainWrapper__1lJxM\",\"title\":\"App_title__1PEAD\"};"],"sourceRoot":""}